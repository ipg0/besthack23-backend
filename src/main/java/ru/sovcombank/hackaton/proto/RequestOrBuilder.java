// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Request.proto

package ru.sovcombank.hackaton.proto;

public interface RequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ru.sovcombank.hackaton.proto.Request)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Тип команды запроса (ctHandshake - запрос на приветствие, ctExecCommand - запрос на исполнение команды, ctStatus - запрос статуса сервиса.)
   * </pre>
   *
   * <code>.ru.sovcombank.hackaton.proto.CommandType command = 1;</code>
   * @return The enum numeric value on the wire for command.
   */
  int getCommandValue();
  /**
   * <pre>
   * Тип команды запроса (ctHandshake - запрос на приветствие, ctExecCommand - запрос на исполнение команды, ctStatus - запрос статуса сервиса.)
   * </pre>
   *
   * <code>.ru.sovcombank.hackaton.proto.CommandType command = 1;</code>
   * @return The command.
   */
  ru.sovcombank.hackaton.proto.MessageEnumsProto.CommandType getCommand();

  /**
   * <pre>
   * Тип собственной команды сервиса для исполнения.
   * </pre>
   *
   * <code>optional .ru.sovcombank.hackaton.proto.OwnCommand commandForExec = 2;</code>
   * @return Whether the commandForExec field is set.
   */
  boolean hasCommandForExec();
  /**
   * <pre>
   * Тип собственной команды сервиса для исполнения.
   * </pre>
   *
   * <code>optional .ru.sovcombank.hackaton.proto.OwnCommand commandForExec = 2;</code>
   * @return The commandForExec.
   */
  ru.sovcombank.hackaton.proto.OwnCommand getCommandForExec();
  /**
   * <pre>
   * Тип собственной команды сервиса для исполнения.
   * </pre>
   *
   * <code>optional .ru.sovcombank.hackaton.proto.OwnCommand commandForExec = 2;</code>
   */
  ru.sovcombank.hackaton.proto.OwnCommandOrBuilder getCommandForExecOrBuilder();

  /**
   * <pre>
   * Список собственных команд сервиса
   * </pre>
   *
   * <code>repeated .ru.sovcombank.hackaton.proto.OwnCommand supportedCommands = 3;</code>
   */
  java.util.List<ru.sovcombank.hackaton.proto.OwnCommand> 
      getSupportedCommandsList();
  /**
   * <pre>
   * Список собственных команд сервиса
   * </pre>
   *
   * <code>repeated .ru.sovcombank.hackaton.proto.OwnCommand supportedCommands = 3;</code>
   */
  ru.sovcombank.hackaton.proto.OwnCommand getSupportedCommands(int index);
  /**
   * <pre>
   * Список собственных команд сервиса
   * </pre>
   *
   * <code>repeated .ru.sovcombank.hackaton.proto.OwnCommand supportedCommands = 3;</code>
   */
  int getSupportedCommandsCount();
  /**
   * <pre>
   * Список собственных команд сервиса
   * </pre>
   *
   * <code>repeated .ru.sovcombank.hackaton.proto.OwnCommand supportedCommands = 3;</code>
   */
  java.util.List<? extends ru.sovcombank.hackaton.proto.OwnCommandOrBuilder> 
      getSupportedCommandsOrBuilderList();
  /**
   * <pre>
   * Список собственных команд сервиса
   * </pre>
   *
   * <code>repeated .ru.sovcombank.hackaton.proto.OwnCommand supportedCommands = 3;</code>
   */
  ru.sovcombank.hackaton.proto.OwnCommandOrBuilder getSupportedCommandsOrBuilder(
      int index);
}
